version: '3.8'

#volumes:
#  postgres_data:

services:
  ma_postgres:
    image: postgres:13.4
    container_name: ma_postgres
    restart: always
    volumes:
      - ./volumes/postgres_data:/var/lib/postgresql/data/
      - ./schema_design/db_schema.sql:/docker-entrypoint-initdb.d/db_schema.sql
    env_file:
      - .env
    expose:
      - 5432
    ports:
      - "5432:5432"

  ma_es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    container_name: es01
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ./volumes/elasticdb/:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  ma_redis:
    image: 'redis:6.2.6'
    container_name: ma_redis
    ports:
      - '6379:6379'

  ma_etl:
    build: ./postgres_to_es
#    deploy:
#      restart_policy:
#        condition: any
#        delay: 5s
#        window: 5s
    restart: unless-stopped
    depends_on:
      - ma_postgres
      - ma_es01
    env_file:
      - .env
    volumes:
      - ./volumes/ETL/etl.log:/sites/etl.log
      - ./volumes/ETL/:/sites/states/

  ma_fastapi:
    build: src/
    container_name: ma_fastapi
    restart: always
    env_file:
      - .env
    ports:
      - '8000:8000'